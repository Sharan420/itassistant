version: "3.8"

services:
  # LangGraph Service (AI Backend)
  langgraph:
    build:
      context: ./Langgraph
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=itassistant
      - MONGODB_COLLECTION=knowledge
      - VECTOR_INDEX_NAME=kb_vector_index
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - ./Langgraph/.env:/app/.env:ro
    networks:
      - it-assistant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend Service (Express API)
  backend:
    build:
      context: ./BackEnd
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - LANGGRAPH_URL=http://langgraph:8000
    depends_on:
      langgraph:
        condition: service_healthy
    networks:
      - it-assistant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Frontend Service (React + Nginx)
  frontend:
    build:
      context: ./FrontEnd
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - it-assistant-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

networks:
  it-assistant-network:
    driver: bridge

volumes:
  mongodb_data:
